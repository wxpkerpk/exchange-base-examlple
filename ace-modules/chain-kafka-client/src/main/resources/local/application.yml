spring:
    application:
      name: chain-kafka-client
    kafka:
      bootstrap-servers: 112.74.59.207:9092
      producer:
        batch-size: 16384
        buffer-memory: 33554432
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
        retries: 1
        acks: 0
      consumer:
        auto-offset-reset: latest
        enable-auto-commit: false
        auto-commit-interval: 5000
        max-poll-records: 1
        fetch-max-wait: 5000
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      listener:
        poll-timeout: 5000
    redis:
      database: 1
      host: ${REDIS_HOST:120.79.250.164}
      port: ${REDIS_PORT:6379}
      password: ${RESI_PASS:wxpker}
      jedis:
        pool:
          max-idle: 8
          min-idle: 0
          max-active: 30
          max-wait: -1
      timeout: 5000
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
    sleuth:
      enabled: true
      http:
        legacy:
          enabled: true
    rabbitmq:
      host: ${RABBIT_MQ_HOST:120.79.250.164}
      port:  ${RABBIT_MQ_PORT:5672}
      username: guest
      password: guest
server:
  port: 19907
sample:
  zipkin:
    # When enabled=false, traces log to the console. Comment to send to zipkin
    enabled: false
ribbon:
  eureka:
    enabled: true
  ReadTimeout: 100000
  ConnectTimeout: 100000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 110000

eureka:
  instance:
    statusPageUrlPath: /actuator/info
    healthCheckUrlPath: /actuator/health
    # docker 部署开启
    prefer-ip-address: true
    ip-address: localhost
  client:
    serviceUrl:
      #            defaultZone: http://localhost:8761/eureka/
      # docker 部署开启
      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/

# 必须配置
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

auth:
  serviceId: ace-auth
  user:
    token-header: Authorization
  client:
    id: chain-kafka-client
    secret: 123456
    token-header: x-client-token

# chain-kafka
bitcola:
  chain:
    packageScan: com/bitcola
    kafka-token: BitColaKafkaPrivateKey
    kafka-topic-receive: chain-test-send
    kafka-topic-send: chain-test-receive
    # 此项必须写,为空则默认为 IP:port 表示每台机器 group-id 都不一样
    kafka-group-id:





