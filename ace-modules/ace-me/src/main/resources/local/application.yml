logging:
    level:
#        tk.mybatis: DEBUG
        com.bitcola: DEBUG
spring:
    application:
        name: ace-me
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
    redis:
        database: 2
        host: ${REDIS_HOST:192.168.0.88}
        port: ${REDIS_PORT:6379}
        max-active: 20
        password: wxpker
    datasource:
      name: test
      url: jdbc:postgresql://${PG_HOST:192.168.0.80}:${PG_PORT:5432}/bitcola_main
      username: postgres
      password: bitcola0823
      # 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: org.postgresql.Driver
      filters: stat
      maxActive: 20
      initialSize: 1
      maxWait: 60000
      minIdle: 1
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20
    sleuth:
      enabled: true
      http:
        legacy:
          enabled: true
    data:
          mongodb:
            uri: mongodb://bitcola:bitcola@120.79.209.254:21111/bitcola
            host: 120.79.209.254
            port: 21111
            database: bitcola
            username: bitcola
            password: bitcola
sample:
  zipkin:
    # When enabled=false, traces log to the console. Comment to send to zipkin
    enabled: false

mybatis:
    basepackage: com.bitcola.me.mapper
    xmlLocation: classpath:mapper/**/*.xml
    mapper-locations: "classpath*:mapper/*.xml"
server:
    port: 8555


eureka:
    instance:
        statusPageUrlPath: /actuator/info
        healthCheckUrlPath: /actuator/health
        prefer-ip-address: true
    client:
        serviceUrl:
#            defaultZone: http://localhost:8761/eureka/
                    # docker 部署开启
            defaultZone: http://${EUREKA_HOST:192.168.0.88}:${EUREKA_PORT:8761}/eureka/
# 必须配置
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 100000
  ConnectTimeout: 100000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 110000

auth:
  serviceId: ace-auth
  user:
    token-header: Authorization
  client:
    id: ace-me
    secret: 123456
    token-header: x-client-token

#redis-cache 相关
redis:
    pool:
         maxActive: 300
         maxIdle: 100
         maxWait: 1000
    host: ${REDIS_HOST:192.168.0.88}
    port:  ${REDIS_PORT:6379}
    password: wxpker
    timeout: 2000
    # 服务或应用名
    sysName: ace-me
    enable: true
    database: 2

