spring:
  kafka:
    bootstrap-servers: 218.95.37.137:9092
    producer:
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 1
      acks: 0
    consumer:
      auto-offset-reset: latest
      enable-auto-commit: false
      auto-commit-interval: 5000
      max-poll-records: 1
      fetch-max-wait: 5000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      poll-timeout: 5000
  redis:
    database: 1
    host: ${REDIS_HOST:s1}
    port: ${REDIS_PORT:6379}
    max-active: 20
    password: wxpker
  datasource:
    name: test
    url: jdbc:postgresql://${PG_HOST:s3}:${PG_PORT:5432}/bitcola_main
    username: gpadmin
    password: 666666pk
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: org.postgresql.Driver
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
  profiles:
      active: bitcoin
  application:
        name: chain-data
  jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
  sleuth:
      enabled: true
      http:
        legacy:
          enabled: true

mybatis:
  basepackage: com.bitcola.chain.mapper
  xmlLocation: classpath:mapper/**/*.xml
  mapper-locations: "classpath*:mapper/*.xml"

server:
  port: 19907

# 必须配置
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 100000
  ConnectTimeout: 100000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 110000

#redis-cache 相关
redis:
    pool:
         maxActive: 300
         maxIdle: 100
         maxWait: 1000
    host: ${REDIS_HOST}
    port:  ${REDIS_PORT}
    password: ${RESI_PASS}
    timeout: 2000
    # 服务或应用名
    sysName: chain-kafka
    enable: true
    database: 0

bitcola:
  chain:
    # 是否是测试环境
    dev: false
    password: DD12138~!@#
    packageScan: com/bitcola
    kafka-token: BitColaKafkaPrivateKey
    # 这两个配置与客户端相反
    kafka-topic-receive: chain-prod-receive
    kafka-topic-send: chain-prod-send
    # 此项必须写,为空则默认为 {IP:port} 表示每台机器 group-id 都不一样
    kafka-group-id:





