logging:
    level:
#        tk.mybatis: DEBUG
        com.bitcola.dataservice: DEBUG
spring:
    application:
        name: bitcola-chat
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
    rabbitmq:
      host: ${RABBIT_MQ_HOST:m1}
      port:  ${RABBIT_MQ_PORT:5672}
      username: bitcola
      password: bitcolapwd
    sleuth:
      enabled: true
      http:
        legacy:
          enabled: true
sample:
  zipkin:
    # When enabled=false, traces log to the console. Comment to send to zipkin
    enabled: false


server:
  port: 10086


eureka:
    instance:
        statusPageUrlPath: /actuator/info
        healthCheckUrlPath: /actuator/health
        # docker 部署开启
    client:
        serviceUrl:
#            defaultZone: http://localhost:8761/eureka/
                    # docker 部署开启
            defaultZone: http://${EUREKA_HOST:m1}:${EUREKA_PORT:8761}/eureka/
# 必须配置
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 100000
  ConnectTimeout: 100000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 110000



auth:
  serviceId: ace-auth
  user:
    token-header: Authorization
  client:
    id: bitcola-chat
    secret: 123456
    token-header: x-client-token

#环信集成
easemob:
  api_server_host: a1.easemob.com
  appkey : 1101181116098389#bticola
  app_client_id : YXA6fhPVYOlzEeiXtzXdHpp01A
  app_client_secret : YXA6n8mPUM3A52jvUcTkZd5eF36qTyQ
